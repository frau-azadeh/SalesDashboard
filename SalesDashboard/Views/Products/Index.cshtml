@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Products";
    var role = Context.Session.GetString("Role") ?? "";
    bool isPurchasing = role == "Purchasing";
}

<div class="max-w-6xl mx-auto py-10 px-4">
    <h1 class="text-2xl font-bold mb-6 text-gray-800">📦 Product List</h1>

    <div class="overflow-x-auto bg-white shadow-md rounded-lg">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50 text-gray-600 text-sm font-medium text-left">
                <tr>
                    <th class="px-6 py-3">ID</th>
                    <th class="px-6 py-3">Name</th>
                    <th class="px-6 py-3">Price</th>
                    <th class="px-6 py-3">Stock</th>
                    <th class="px-6 py-3">Actions</th>
                </tr>
            </thead>
            <tbody id="productTable" class="bg-white divide-y divide-gray-100 text-sm">
                <!-- Filled by JavaScript -->
            </tbody>
        </table>
    </div>

    @if (isPurchasing)
    {
        <div class="mt-8 max-w-md">
            <h2 class="text-xl font-bold text-gray-700 mb-4">Add / Edit Product</h2>
            <form id="productForm" class="space-y-4">
                <input type="hidden" id="productId" />
                <input id="name" class="w-full px-4 py-2 border rounded" placeholder="Name" required />
                <input id="price" type="number" class="w-full px-4 py-2 border rounded" placeholder="Price" required />
                <input id="stock" type="number" class="w-full px-4 py-2 border rounded" placeholder="Stock" required />
                <button type="submit" class="w-full bg-blue-500 hover:bg-blue-600 text-white py-2 rounded">Save</button>
            </form>
        </div>
    }
</div>

@section Scripts {
    <script>
        const isPurchasing = '@role' === 'Purchasing';

        function loadProducts() {
            fetch("/api/productsapi")
                .then(res => res.json())
                .then(data => {
                    const table = document.getElementById("productTable");
                    table.innerHTML = "";
                    data.forEach(p => {
                        table.innerHTML += `
                            <tr>
                                <td class="px-6 py-3">${p.Id}</td>
                                <td class="px-6 py-3">${p.Name}</td>
                                <td class="px-6 py-3">${p.Price}</td>
                                <td class="px-6 py-3">${p.Stock}</td>
                                <td class="px-6 py-3 space-x-2">
                                    ${isPurchasing ? `
                                        <button onclick="editProduct(${p.Id}, '${p.Name}', ${p.Price}, ${p.Stock})" class="text-yellow-600 hover:underline">Edit</button>
                                        <button onclick="deleteProduct(${p.id})" class="text-red-600 hover:underline">Delete</button>
                                    ` : ''}
                                </td>
                            </tr>`;
                    });
                });
        }

        loadProducts();

        if (isPurchasing) {
            document.getElementById("productForm").addEventListener("submit", function (e) {
                e.preventDefault();

                const id = document.getElementById("productId").value;
                const name = document.getElementById("name").value;
                const price = parseInt(document.getElementById("price").value);
                const stock = parseInt(document.getElementById("stock").value);

                const method = id ? "PUT" : "POST";
                const url = id ? `/api/productsapi/${id}` : "/api/productsapi";

                const payload = { name, price, stock };
                if (id) payload.id = parseInt(id); // فقط اگر ویرایشه

                fetch(url, {
                    method: method,
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(payload)
                })
                .then(res => {
                    if (!res.ok) {
                        res.text().then(msg => console.error("Server error:", msg));
                        alert("Failed to save product.");
                        return;
                    }
                    loadProducts();
                    document.getElementById("productForm").reset();
                    document.getElementById("productId").value = "";
                });
            });

            window.editProduct = function (id, name, price, stock) {
                document.getElementById("productId").value = id;
                document.getElementById("name").value = name;
                document.getElementById("price").value = price;
                document.getElementById("stock").value = stock;
                window.scrollTo(0, document.body.scrollHeight);
            };

            window.deleteProduct = function (id) {
                if (confirm("Are you sure you want to delete this product?")) {
                    fetch(`/api/productsapi/${id}`, {
                        method: "DELETE"
                    }).then(() => loadProducts());
                }
            };
        }
    </script>
}
